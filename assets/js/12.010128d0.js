(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{288:function(e,t,v){"use strict";v.r(t);var _=v(0),s=Object(_.a)({},(function(){var e=this,t=e.$createElement,v=e._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("p",[e._v("阅读学习Koa Core源码，基于koa v2.5.2。")]),e._v(" "),v("p",[e._v("Koa的核心代码很少，就四个文件"),v("code",[e._v("application")]),e._v(", "),v("code",[e._v("context")]),e._v(", "),v("code",[e._v("request")]),e._v(", "),v("code",[e._v("response")]),e._v("，算上注释和空行目前也还没过2000行代码。")]),e._v(" "),v("p",[e._v("这一篇针对"),v("code",[e._v("request")]),e._v(", "),v("code",[e._v("response")]),e._v("的源码进行阅读学习。")]),e._v(" "),v("h1",{attrs:{id:"koa-core"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#koa-core"}},[e._v("#")]),e._v(" Koa Core")]),e._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/koajs/koa/tree/2.5.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("koajs/koa"),v("OutboundLink")],1)]),e._v(" "),v("ul",[v("li",[v("code",[e._v("lib/application")])]),e._v(" "),v("li",[v("code",[e._v("lib/context")])]),e._v(" "),v("li",[v("code",[e._v("lib/request")])]),e._v(" "),v("li",[v("code",[e._v("lib/response")])])]),e._v(" "),v("p",[e._v("主要这四个文件，当然也还依赖了很多外部库，以及koa的其他仓库。这一篇看后两部分"),v("code",[e._v("lib/request")]),e._v(", "),v("code",[e._v("lib/response")]),e._v("。")]),e._v(" "),v("p",[e._v("这两部分代码行数比较多，就不把所有代码贴出来了。")]),e._v(" "),v("TOC"),e._v(" "),v("h2",{attrs:{id:"request"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request"}},[e._v("#")]),e._v(" Request")]),e._v(" "),v("h3",{attrs:{id:"request-socket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-socket"}},[e._v("#")]),e._v(" Request Socket")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("socket()")])])]),e._v(" "),v("p",[e._v("获取请求对应的"),v("code",[e._v("socket")]),e._v("对象，即"),v("code",[e._v("req.socket")]),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"request-url-相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-url-相关"}},[e._v("#")]),e._v(" Request URL 相关")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("url()")]),e._v(", "),v("code",[e._v("origin()")]),e._v(", "),v("code",[e._v("href()")]),e._v(", "),v("code",[e._v("path()")]),e._v(", "),v("code",[e._v("query()")]),e._v(", "),v("code",[e._v("querystring()")]),e._v(", "),v("code",[e._v("search()")]),e._v(", "),v("code",[e._v("host()")]),e._v(", "),v("code",[e._v("hostname()")]),e._v(", "),v("code",[e._v("URL()")]),e._v(", "),v("code",[e._v("subdomains()")]),e._v(", "),v("code",[e._v("protocol()")]),e._v(", "),v("code",[e._v("secure()")])])]),e._v(" "),v("p",[e._v("URL相关的一系列方法，用于解析、获取URL中的相关信息。")]),e._v(" "),v("p",[e._v("用到的库包括："),v("code",[e._v("querystring")]),e._v(", "),v("code",[e._v("parseurl")]),e._v(", "),v("code",[e._v("url.format")]),e._v(", "),v("code",[e._v("url.URL")])]),e._v(" "),v("p",[e._v("注意区分"),v("code",[e._v("url()")]),e._v("和"),v("code",[e._v("URL()")]),e._v(":")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("url()")]),e._v("直接对应的是"),v("code",[e._v("req.url")])]),e._v(" "),v("li",[v("code",[e._v("URL()")]),e._v("是通过"),v("a",{attrs:{href:"https://nodejs.org/api/url.html#url_class_url",target:"_blank",rel:"noopener noreferrer"}},[v("code",[e._v("url.URL")]),v("OutboundLink")],1),e._v("类，将"),v("code",[e._v("protocol()")]),e._v(", "),v("code",[e._v("host()")]),e._v(", "),v("code",[e._v("req.url")]),e._v("拼接在一起得到的"),v("code",[e._v("URL")]),e._v("对象")])]),e._v(" "),v("h3",{attrs:{id:"request-header-获取"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-header-获取"}},[e._v("#")]),e._v(" Request Header 获取")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("header()")]),e._v(", "),v("code",[e._v("headers()")]),e._v(", "),v("code",[e._v("get()")])])]),e._v(" "),v("p",[v("code",[e._v("header()")]),e._v("和"),v("code",[e._v("headers()")]),e._v("是等价的别名，针对request的headers信息，设置相应的getter和setter。只有"),v("code",[e._v("get header()")]),e._v("和"),v("code",[e._v("get headers()")]),e._v("被代理到了"),v("code",[e._v("ctx")]),e._v("上。")]),e._v(" "),v("p",[v("code",[e._v("get()")]),e._v("是一个方法，用于获取header中的字段。")]),e._v(" "),v("p",[e._v("例如："),v("code",[e._v("request.header['Content-Type']")]),e._v(" 等价于 "),v("code",[e._v("request.get('Content-Type')")])]),e._v(" "),v("h3",{attrs:{id:"request-header-相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-header-相关"}},[e._v("#")]),e._v(" Request Header 相关")]),e._v(" "),v("p",[e._v("通过请求中的各个headers，获取相关的内容：")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("method()")]),e._v(": 获取请求的method。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("idempotent()")]),e._v(": 判断请求是否是幂等的，主要是通过请求的方法是否是"),v("code",[e._v("'GET', 'HEAD', 'PUT', 'DELETE', 'OPTIONS', 'TRACE'")]),e._v("之一来判断。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("fresh()")]),e._v(": 判断请求的内容是否未过期，就是判断请求的"),v("code",[e._v("Last-Modified")]),e._v("和"),v("code",[e._v("Etag")]),e._v("是否匹配，通过第三方库"),v("code",[e._v("fresh")]),e._v("实现。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("stale()")]),e._v(": 判断请求的内容是否已过期，即"),v("code",[e._v("!fresh")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("charset()")]),e._v(": 获取请求的"),v("code",[e._v("Content-Type")]),e._v("中的"),v("code",[e._v("charset")]),e._v("，通过第三方库"),v("code",[e._v("content-type")]),e._v("辅助实现。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("length()")]),e._v(": 获取请求的"),v("code",[e._v("Content-Length")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("ips()")]),e._v(": 如果请求经过了反向代理，获取请求的"),v("code",[e._v("X-Forwarded-For")]),e._v("中的ip数组。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("ip()")]),e._v(": 如果请求经过了反向代理，获取请求的"),v("code",[e._v("X-Forwarded-For")]),e._v("中的ip数组的第一个ip。如果没有经过反向代理，返回"),v("code",[e._v("socket.remoteAddress")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("is()")]),e._v(": 判断请求的"),v("code",[e._v("Content-Type")]),e._v("是否是某种或某些类型，通过第三方库"),v("code",[e._v("type-is")]),e._v("实现。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("type()")]),e._v(": 获取请求的"),v("code",[e._v("Content-Type")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("accept()")]),e._v(": 解析请求的"),v("code",[e._v("Accept-*")]),e._v("一系列headers。通过第三方库"),v("code",[e._v("accepts")]),e._v("实现，返回该库的一个"),v("code",[e._v("Accept")]),e._v("对象。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("accepts()")]),e._v(": 即"),v("code",[e._v("accept.types")]),e._v("方法，判断请求的"),v("code",[e._v("Content-Type")]),e._v("是否匹配某种或某些类型。返回传入的最匹配的类型，如果均不匹配返回"),v("code",[e._v("false")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("acceptsCharsets()")]),e._v(": 即"),v("code",[e._v("accept.charsets")]),e._v("方法，判断"),v("code",[e._v("Accept-Charset")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("acceptsLanguages()")]),e._v(": 即"),v("code",[e._v("accept.languages")]),e._v("方法，判断"),v("code",[e._v("Accept-Language")]),e._v("。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("acceptsEncodings()")]),e._v(": 即"),v("code",[e._v("accept.encodings")]),e._v("方法，判断"),v("code",[e._v("Accept-Encoding")]),e._v("。")])])]),e._v(" "),v("h3",{attrs:{id:"request-其它方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#request-其它方法"}},[e._v("#")]),e._v(" Request 其它方法")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("inspect()")]),e._v(", "),v("code",[e._v("toJSON()")])])]),e._v(" "),v("p",[e._v("Request的"),v("code",[e._v("inspect")]),e._v("方法。")]),e._v(" "),v("h2",{attrs:{id:"response"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response"}},[e._v("#")]),e._v(" Response")]),e._v(" "),v("h3",{attrs:{id:"response-socket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-socket"}},[e._v("#")]),e._v(" Response Socket")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("socket()")])])]),e._v(" "),v("p",[e._v("获取响应对应的"),v("code",[e._v("socket")]),e._v("对象，即"),v("code",[e._v("res.socket")]),e._v("。")]),e._v(" "),v("h3",{attrs:{id:"response-header-设置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-header-设置"}},[e._v("#")]),e._v(" Response Header 设置")]),e._v(" "),v("p",[v("code",[e._v("header()")]),e._v("和"),v("code",[e._v("headers()")]),e._v("是等价的别名，针对response的headers信息，仅有getter，而没有setter。"),v("code",[e._v("get()")]),e._v("是一个方法，用于获取header中的字段。这三个与request中对应的方法相同，但注意均没有被代理到"),v("code",[e._v("ctx")]),e._v("上。")]),e._v(" "),v("p",[v("code",[e._v("set()")]),e._v("是一个方法，用于设置响应中对应的header字段。")]),e._v(" "),v("p",[v("code",[e._v("append()")]),e._v("方法，用于在相应的header字段中添加内容。和"),v("code",[e._v("set()")]),e._v("的区别在于，如果对应字段已存在，"),v("code",[e._v("set()")]),e._v("是直接替换相应内容，而"),v("code",[e._v("append()")]),e._v("是以数组形式追加相应内容。例如：")]),e._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[e._v("response"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("set")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Foo'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'bar'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("set")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Foo'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'baz'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -> Foo: baz")]),e._v("\n\nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("set")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Fo'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'bar'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\nresponse"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[e._v("append")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'Fo'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[e._v("'baz'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// -> Fo: bar; baz")]),e._v("\n")])])]),v("p",[v("code",[e._v("remove()")]),e._v("方法则是从header中移除相应字段。")]),e._v(" "),v("p",[v("code",[e._v("set(), append(), remove()")]),e._v("均被代理到了"),v("code",[e._v("ctx")]),e._v("上。")]),e._v(" "),v("h3",{attrs:{id:"response-header-相关"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-header-相关"}},[e._v("#")]),e._v(" Response Header 相关")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("length()")]),e._v(": 用于获取和设置响应的"),v("code",[e._v("Content-Length")]),e._v("，若没有手动设置过，则自动计算"),v("code",[e._v("body")]),e._v("的长度。")]),e._v(" "),v("li",[v("code",[e._v("vary()")]),e._v(": 用于设置响应的"),v("code",[e._v("Vary")]),e._v("，通过第三方库"),v("code",[e._v("vary")]),e._v("实现。")]),e._v(" "),v("li",[v("code",[e._v("lastModified()")]),e._v(": 用于获取和设置响应的"),v("code",[e._v("Last-Modified")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("eTag()")]),e._v(": 用于获取和设置响应的"),v("code",[e._v("ETag")]),e._v("。")]),e._v(" "),v("li",[v("code",[e._v("type()")]),e._v(": 用于获取和设置响应的"),v("code",[e._v("Content-Type")]),e._v("，通过第三方库"),v("code",[e._v("cache-content-type")]),e._v("来辅助实现。")]),e._v(" "),v("li",[v("code",[e._v("is()")]),e._v(": 用于判断响应的"),v("code",[e._v("Content-Type")]),e._v("是否属于某些类型，通过第三方库"),v("code",[e._v("type-is")]),e._v("来辅助实现。")]),e._v(" "),v("li",[v("code",[e._v("attachment()")]),e._v(": 用于设置响应的"),v("code",[e._v("Content-Disposition")]),e._v("为"),v("code",[e._v("attachment")]),e._v("，同时可以传入"),v("code",[e._v("filename")]),e._v("。如果传入"),v("code",[e._v("filename")]),e._v("，则会通过"),v("code",[e._v("path.extname")]),e._v("判断扩展名，自动设置相应的"),v("code",[e._v("Content-Type")]),e._v("。通过第三方库"),v("code",[e._v("content-disposition")]),e._v("来辅助实现。")]),e._v(" "),v("li",[v("code",[e._v("redirect()")]),e._v(": 用于设置响应的"),v("code",[e._v("Location")]),e._v("，同时将"),v("code",[e._v("status")]),e._v("设置为302（除非手动设置为301）。如果请求的"),v("code",[e._v("Referrer")]),e._v("存在，可以通过传入"),v("code",[e._v("'back'")]),e._v("跳转回之前页面。同时根据请求的"),v("code",[e._v("Accepts")]),e._v("预设了返回的"),v("code",[e._v("body")]),e._v("内容和相应的"),v("code",[e._v("Content-Type")]),e._v(".")])]),e._v(" "),v("h3",{attrs:{id:"response-具体响应"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-具体响应"}},[e._v("#")]),e._v(" Response 具体响应")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("status()")]),e._v(": 获取和设置响应的HTTP状态码，并将请求的"),v("code",[e._v("message")]),e._v("和"),v("code",[e._v("body")]),e._v("设置为相应的信息。通过第三方库"),v("code",[e._v("statuses")]),e._v("来判断状态码是否合法，并获取对应状态码的状态信息。")]),e._v(" "),v("li",[v("code",[e._v("message()")]),e._v(": 获取和设置响应的HTTP状态码信息。如果使用的HTTP版本低于2.0，将会根据"),v("code",[e._v("status()")]),e._v("自动设置（HTTP2.0中不再包含状态信息，只包含状态码）。")]),e._v(" "),v("li",[v("code",[e._v("body()")]),e._v(": 获取和设置响应的主体，并根据传入的类型自动设置"),v("code",[e._v("Content-Type")]),e._v(", "),v("code",[e._v("Content-Length")]),e._v("等相关headers，以及设置状态码为"),v("code",[e._v("200 OK")]),e._v("或"),v("code",[e._v("204 No Content")]),e._v("。")])]),e._v(" "),v("p",[e._v("注意这三个方法会彼此调用，一般只设置"),v("code",[e._v("status()")]),e._v("或只设置"),v("code",[e._v("body()")]),e._v("即可。")]),e._v(" "),v("h3",{attrs:{id:"response-状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-状态"}},[e._v("#")]),e._v(" Response 状态")]),e._v(" "),v("ul",[v("li",[v("code",[e._v("headerSent()")]),e._v(": 判断响应的headers的内容是否已经写入"),v("code",[e._v("socket")]),e._v("，如果已经写入了，上述所有修改headers的方法都将失效，直接return。")]),e._v(" "),v("li",[v("code",[e._v("writable()")]),e._v(": 判断响应的"),v("code",[e._v("socket")]),e._v("是否可写，如果响应已结束或者socket已关闭则不可写。")]),e._v(" "),v("li",[v("code",[e._v("flushHeaders()")]),e._v(": 立即将现在已经设置好的headers发送，并开始body部分。")])]),e._v(" "),v("h3",{attrs:{id:"response-其它方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#response-其它方法"}},[e._v("#")]),e._v(" Response 其它方法")]),e._v(" "),v("blockquote",[v("p",[v("code",[e._v("inspect()")]),e._v(", "),v("code",[e._v("toJSON()")])])]),e._v(" "),v("p",[e._v("Response的"),v("code",[e._v("inspect")]),e._v("方法。")]),e._v(" "),v("h2",{attrs:{id:"more"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#more"}},[e._v("#")]),e._v(" More")]),e._v(" "),v("p",[e._v("Koa对request和response的别名，以及在context上的代理，其实并不直观，不太符合语义上的直觉。")]),e._v(" "),v("p",[e._v("很早就有一个Issue("),v("a",{attrs:{href:"https://github.com/koajs/koa/issues/849",target:"_blank",rel:"noopener noreferrer"}},[e._v("Request / response aliases are bad idea #849"),v("OutboundLink")],1),e._v(")提出过这个问题，里面的讨论有些还是挺有意思的。")]),e._v(" "),v("p",[e._v("其实了解了代码的思想之后，这些就是使用习惯上的问题。")]),e._v(" "),v("p",[e._v("Koa的核心代码其实很短和好理解，还有很多就是中间件、第三方库的内容了。下一篇会将"),v("code",[e._v("koa-compose")]),e._v("过一遍，看看koa是怎么把多个中间件按顺序合成一个的。")]),e._v(" "),v("h2",{attrs:{id:"references"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[e._v("#")]),e._v(" References")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/koajs/koa/tree/2.5.2",target:"_blank",rel:"noopener noreferrer"}},[e._v("koajs/koa v2.5.2"),v("OutboundLink")],1)])]),e._v(" "),v("h2",{attrs:{id:"related-posts"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#related-posts"}},[e._v("#")]),e._v(" Related posts")]),e._v(" "),v("blockquote",[v("p",[e._v("Koa源码阅读："),v("br"),e._v(" "),v("router-link",{attrs:{to:"/posts/2018/08/15/koa-core-read-source-code-part-1.html"}},[e._v("Koa Core - 源码阅读 1 - Application")]),v("br"),e._v(" "),v("router-link",{attrs:{to:"/posts/2018/09/26/koa-core-read-source-code-part-2.html"}},[e._v("Koa Core - 源码阅读 2 - Context")])],1)])],1)}),[],!1,null,null,null);t.default=s.exports}}]);