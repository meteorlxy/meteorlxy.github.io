(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{291:function(e,t,r){"use strict";r.r(t);var v=r(0),o=Object(v.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[e._v("Prettier 支持处理 Vue 文件，但大体上是将其作为含有部分特殊语法的 HTML 文件处理，这样会和 Vue Style Guide 有部分冲突，并且无法处理 Custom Blocks。为了解决这些问题，可以使用 "),r("a",{attrs:{href:"https://github.com/meteorlxy/eslint-plugin-prettier-vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("eslint-plugin-prettier-vue"),r("OutboundLink")],1),e._v("，让 Prettier 更好地处理 Vue SFC。")]),e._v(" "),r("p",[e._v("这篇文章对 "),r("a",{attrs:{href:"https://github.com/meteorlxy/eslint-plugin-prettier-vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("eslint-plugin-prettier-vue"),r("OutboundLink")],1),e._v(" 的实现思路进行简单的介绍和总结。")]),e._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("p",[e._v("Prettier 1.15 开始支持处理 Vue 文件，但大体上是把 Vue 文件当作普通的 HTML 文件处理。这样存在两个问题：")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://vuejs.org/v2/style-guide/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue Style Guide"),r("OutboundLink")],1),e._v(" 对 SFC 中 "),r("code",[e._v("<template>")]),e._v(" 的样式有较为详细的建议，并且通过 eslint-plugin-vue 可以直接引入。但使用 Prettier 会与 "),r("code",[e._v("eslint-plugin-vue")]),e._v(" 中的规则有一定的冲突，需要通过 "),r("code",[e._v("eslint-config-prettier/vue")]),e._v(" 关闭相关规则。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://vue-loader.vuejs.org/guide/custom-blocks.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vue Custom Blocks"),r("OutboundLink")],1),e._v(" 可能并不是 HTML 中支持的语言，直接使用 Prettier 是无法处理这些自定义块的样式的。")])]),e._v(" "),r("p",[e._v("为了解决这些问题，可以使用 "),r("a",{attrs:{href:"https://github.com/meteorlxy/eslint-plugin-prettier-vue",target:"_blank",rel:"noopener noreferrer"}},[e._v("eslint-plugin-prettier-vue"),r("OutboundLink")],1),e._v("，让 Prettier 更好地处理 Vue SFC。")]),e._v(" "),r("h2",{attrs:{id:"实现思路"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[e._v("#")]),e._v(" 实现思路")]),e._v(" "),r("h3",{attrs:{id:"将-prettier-集成到-eslint-工作流中"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将-prettier-集成到-eslint-工作流中"}},[e._v("#")]),e._v(" 将 Prettier 集成到 ESLint 工作流中")]),e._v(" "),r("p",[e._v("主要参考 Prettier 官方提供的 "),r("code",[e._v("eslint-plugin-prettier")]),e._v("，将 Prettier 转化为 ESLint 中的一条 rule：")]),e._v(" "),r("ul",[r("li",[e._v("在 "),r("code",[e._v("meta")]),e._v(" 中设置支持的 Prettier 等相关选项")]),e._v(" "),r("li",[e._v("在 "),r("code",[e._v("create")]),e._v(" 方法中实现对 Prettier 的集成")])]),e._v(" "),r("p",[e._v("这一部分主要是关于 ESLint Plugin 的写法，以及对 "),r("code",[e._v("eslint-plugin-prettier")]),e._v(" 的一些重构调整，不再多加赘述。")]),e._v(" "),r("h3",{attrs:{id:"将不同-block-分开处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将不同-block-分开处理"}},[e._v("#")]),e._v(" 将不同 block 分开处理")]),e._v(" "),r("p",[e._v("我们知道，在通过 "),r("code",[e._v("webpack")]),e._v(" 处理 Vue SFC 时，vue-loader 会将 "),r("code",[e._v("<template>")]),e._v(", "),r("code",[e._v("<script>")]),e._v(", "),r("code",[e._v("<style>")]),e._v(", "),r("code",[e._v("<custom-block>")]),e._v(" 分开处理，底层实际上是使用了 "),r("a",{attrs:{href:"https://www.npmjs.com/package/@vue/component-compiler-utils",target:"_blank",rel:"noopener noreferrer"}},[e._v("@vue/component-compiler-utils"),r("OutboundLink")],1),e._v(" 和 "),r("a",{attrs:{href:"https://www.npmjs.com/package/vue-template-compiler",target:"_blank",rel:"noopener noreferrer"}},[e._v("vue-template-compiler"),r("OutboundLink")],1),e._v(" 的能力。")]),e._v(" "),r("p",[e._v("通过 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 的 "),r("code",[e._v("parse()")]),e._v(" 方法，传入文件内容和文件名，就可以得到包含各个 SFC Blocks 详细描述的对象。将这些 SFC Blocks 当作不同格式的文件传给 Prettier ，即可实现各个 block 分开处理的能力，也能支持 Custom Blocks 的处理了。")]),e._v(" "),r("p",[r("code",[e._v("parse()")]),e._v(" 方法所需要的内容均可以在 "),r("code",[e._v("create()")]),e._v(" 方法的第一个参数 "),r("code",[e._v("context")]),e._v(" 中获取到，熟悉 ESLint 相关 API 即可实现。")]),e._v(" "),r("h2",{attrs:{id:"一些需要注意的点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一些需要注意的点"}},[e._v("#")]),e._v(" 一些需要注意的点")]),e._v(" "),r("h3",{attrs:{id:"如何处理代码的位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何处理代码的位置"}},[e._v("#")]),e._v(" 如何处理代码的位置")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("parse()")]),e._v(" 方法返回的 SFC Blocks 中，有 block 在原始文件的 "),r("code",[e._v("start")]),e._v(" 和 "),r("code",[e._v("end")])]),e._v(" "),r("li",[r("code",[e._v("parse()")]),e._v(" 方法返回的 SFC Blocks 中，"),r("code",[e._v("content")]),e._v(" 会默认填充空行和消除缩进，即 "),r("code",[e._v("compilerParseOptions: { pad: 'line', deindent: true }")]),e._v("，这是为了方便 vue-loader 定位原始代码位置，但在 Prettier 中是应该去掉的，否则会影响 Prettier 对格式的处理和代码定位。因此需要设置为 "),r("code",[e._v("compilerParseOptions: { pad: false, deindent: false }")]),e._v("。\n"),r("blockquote",[r("p",[e._v("这两个配置项的使用方法在对应文档里基本都没有，需要到源码中才能找到")])])])]),e._v(" "),r("p",[e._v("有了这些信息，配合 "),r("code",[e._v("prettier-linter-helpers")]),e._v(" 提供的 "),r("code",[e._v("offset")]),e._v("，就可以给 ESLint 反馈正确的代码位置了。")]),e._v(" "),r("h3",{attrs:{id:"vue-component-compiler-utils-的缓存问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#vue-component-compiler-utils-的缓存问题"}},[e._v("#")]),e._v(" @vue/component-compiler-utils 的缓存问题")]),e._v(" "),r("p",[r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 根据文件内容 "),r("code",[e._v("filename")]),e._v(" 和文件内容 "),r("code",[e._v("source")]),e._v(" 对 vue 文件进行了缓存，如果缓存命中则会直接返回之前的处理结果 ("),r("a",{attrs:{href:"https://github.com/vuejs/component-compiler-utils/blob/37b4a6a99ecaa8bf27c777191ac17e9168c70cd1/lib/parse.ts#L55-L57",target:"_blank",rel:"noopener noreferrer"}},[e._v("对应源码"),r("OutboundLink")],1),e._v(")。")]),e._v(" "),r("p",[e._v("由于缓存没有对 "),r("code",[e._v("compilerParseOptions")]),e._v(" 进行区分，在 webpack + vue-loader + eslint-loader 的情况下会有问题：")]),e._v(" "),r("ol",[r("li",[e._v("vue-loader 调用 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 时，使用了 "),r("code",[e._v("compilerParseOptions: { pad: 'line' }")])]),e._v(" "),r("li",[e._v("eslint-loader (即 "),r("code",[e._v("eslint-plugin-prettier-vue")]),e._v(") 调用 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 时，使用了 "),r("code",[e._v("compilerParseOptions: { pad: false, deindent: false }")])]),e._v(" "),r("li",[e._v("此时由于 eslint 中的调用同样命中了缓存，"),r("code",[e._v("compilerParseOptions: { pad: false, deindent: false }")]),e._v(" 就会失效，prettier 中就会得到填充空行和消除缩进的代码导致样式处理出错。")])]),e._v(" "),r("p",[e._v("为了应对这种情况，可以：")]),e._v(" "),r("ol",[r("li",[e._v("给传入 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 的 "),r("code",[e._v("filename")]),e._v(" 加上前缀 / 后缀用以区分")]),e._v(" "),r("li",[e._v("向 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 提 PR，将 "),r("code",[e._v("compilerParseOptions")]),e._v(" 也加入缓存 key")])]),e._v(" "),r("p",[e._v("由于 "),r("code",[e._v("@vue/component-compiler-utils")]),e._v(" 目前并不在积极维护（都在努力搞 vue 3.0 吧），并且该项目基本只是为 vue-loader 服务的，所以目前简单用第一种方式解决。")]),e._v(" "),r("h2",{attrs:{id:"存在的不足"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#存在的不足"}},[e._v("#")]),e._v(" 存在的不足")]),e._v(" "),r("h3",{attrs:{id:"整个文件级别的样式处理问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#整个文件级别的样式处理问题"}},[e._v("#")]),e._v(" 整个文件级别的样式处理问题")]),e._v(" "),r("p",[e._v("由于我们将整个 "),r("code",[e._v(".vue")]),e._v(" 文件根据 block 拆分为了几个不同格式的小文件交给 prettier 处理，那么 prettier 就无法感知 block 之外内容的格式问题：")]),e._v(" "),r("ul",[r("li",[e._v("block 之间有多个空行 / 没有空行")]),e._v(" "),r("li",[e._v("文件末尾有多个空行 / 没有空行")])]),e._v(" "),r("p",[e._v("这些样式问题就无法被 prettier 检测到了。")]),e._v(" "),r("h2",{attrs:{id:"相关文章"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[e._v("#")]),e._v(" 相关文章")]),e._v(" "),r("ul",[r("li",[r("router-link",{attrs:{to:"/posts/2019/08/05/understand-and-use-prettier.html"}},[e._v("理解 Prettier 并用它统一你的代码风格")])],1)])])}),[],!1,null,null,null);t.default=o.exports}}]);